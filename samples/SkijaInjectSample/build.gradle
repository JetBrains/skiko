plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'application'
}

repositories {
    mavenLocal()
    jcenter()
    maven {
       url 'https://dl.bintray.com/kotlin/kotlin-eap'
    }
    maven {
       url 'https://maven.pkg.jetbrains.space/public/p/compose/dev'
    }
}

def osName = System.getProperty("os.name")
def targetOs = ""
if (osName == "Mac OS X") {
    targetOs = "macos"
} else if (osName.startsWith("Win")) {
    targetOs = "windows"
} else if (osName.startsWith("Linux")) {
    targetOs = "linux"
} else {
    throw Error("Unsupported OS: $osName")
}
def osArch = System.getProperty("os.arch")
def targetArch = ""
if (osArch == "x86_64" || osArch == "amd64") {
    targetArch = "x64"
} else if (osArch == "aarch64") {
    targetArch = "arm64"
} else {
    throw Error("Unsupported arch: $osArch")
}
def target = "${targetOs}-${targetArch}"

def version = "0.0.0-SNAPSHOT"
if (project.hasProperty('skiko.version')) {
  version = project.properties['skiko.version']
}

dependencies {
    implementation platform('org.jetbrains.kotlin:kotlin-bom')
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-swing:1.4.1'
    implementation "org.jetbrains.skiko:skiko-jvm-runtime-$target:$version"
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
}

application {
    mainClassName = 'SkijaInjectSample.AppKt'
}

run {
    systemProperty("skiko.fps.enabled", "true")
}

test {
    systemProperty("skiko.test.screenshots.dir", new File(project.projectDir, "src/test/screenshots").absolutePath)

    // Tests should be deterministic, so disable scaling.
    // On MacOs we need the actual scale, otherwise we will have aliased screenshots because of scaling.
    if (System.getProperty("os.name") != "Mac OS X") {
        systemProperty("sun.java2d.dpiaware", "false")
        systemProperty("sun.java2d.uiScale", "1")
    }
}